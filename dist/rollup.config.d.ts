import type { RollupOptions, OutputOptions } from 'rollup';
export { visualizer } from 'rollup-plugin-visualizer';
export type { InputPluginOption } from 'rollup';
export declare const devInput: RollupOptions;
export declare const devOutput: OutputOptions;
export declare const prodOutput: OutputOptions;
export declare const vendorInput: RollupOptions;
export declare const vendorDevOutput: OutputOptions;
export declare const vendorProdOutput: {
    amd?: import("rollup").AmdOptions;
    assetFileNames?: string | ((chunkInfo: import("rollup").PreRenderedAsset) => string);
    banner?: string | import("rollup").AddonFunction;
    chunkFileNames?: string | ((chunkInfo: import("rollup").PreRenderedChunk) => string);
    compact?: boolean;
    dir?: string;
    dynamicImportFunction?: string;
    dynamicImportInCjs?: boolean;
    entryFileNames?: string | ((chunkInfo: import("rollup").PreRenderedChunk) => string);
    esModule?: boolean | "if-default-prop";
    experimentalDeepDynamicChunkOptimization?: boolean;
    experimentalMinChunkSize?: number;
    exports?: "default" | "named" | "none" | "auto";
    extend?: boolean;
    externalImportAssertions?: boolean;
    externalLiveBindings?: boolean;
    file?: string;
    footer?: string | import("rollup").AddonFunction;
    format?: import("rollup").ModuleFormat;
    freeze?: boolean;
    generatedCode?: import("rollup").GeneratedCodePreset | import("rollup").GeneratedCodeOptions;
    globals?: import("rollup").GlobalsOption;
    hoistTransitiveImports?: boolean;
    indent?: string | boolean;
    inlineDynamicImports?: boolean;
    interop?: import("rollup").InteropType | import("rollup").GetInterop;
    intro?: string | import("rollup").AddonFunction;
    manualChunks?: import("rollup").ManualChunksOption;
    minifyInternalExports?: boolean;
    name?: string;
    namespaceToStringTag?: boolean;
    noConflict?: boolean;
    outro?: string | import("rollup").AddonFunction;
    paths?: import("rollup").OptionsPaths;
    plugins?: import("rollup").OutputPluginOption;
    preferConst?: boolean;
    preserveModules?: boolean;
    preserveModulesRoot?: string;
    sanitizeFileName?: boolean | ((fileName: string) => string);
    sourcemap?: boolean | "inline" | "hidden";
    sourcemapBaseUrl?: string;
    sourcemapExcludeSources?: boolean;
    sourcemapFile?: string;
    sourcemapIgnoreList?: boolean | import("rollup").SourcemapIgnoreListOption;
    sourcemapPathTransform?: import("rollup").SourcemapPathTransformOption;
    strict?: boolean;
    systemNullSetters?: boolean;
    validate?: boolean;
};
//# sourceMappingURL=rollup.config.d.ts.map